version: "3.9"
services:
  postgres:
    image: postgres:16.3-alpine
    container_name: postgres
    ports:
      - 5555:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - /var/postgres:/var/lib/postgresql/data
    networks:
      - wanrun
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 3s
      retries: 5
  backend:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: Dev # airを使ってホットリロードしたい場合(開発する際)
      # target: Deploy # 本番実行環境で行いたい場合、コメントを外す
    stdin_open: true
    tty: true
    container_name: wanrun
    ports:
      - 8080:8080
      - 2345:2345
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      GO_ENV: ${GO_ENV}
      SECRET_KEY: ${SECRET_KEY}
      GOOGLE_PLACE_API_KEY: ${GOOGLE_PLACE_API_KEY}
      STAGE: ${STAGE}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./:/app
    networks:
      - wanrun
networks: 
  wanrun:
# データの永続化
volumes:
  postgres:
  backend:
