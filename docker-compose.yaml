version: "3.9"
services:
  postgres:
    image: postgres:16.3-alpine
    container_name: postgres
    ports:
      - 5555:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - /var/postgres:/var/lib/postgresql/data
    networks:
      - wanrun
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 3s
      retries: 5
  backend:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: Dev # airを使ってホットリロードしたい場合(開発する際)
      # target: Deploy # 本番実行環境で行いたい場合、コメントを外す
    stdin_open: true
    tty: true
    container_name: wanrun
    ports:
      - 8080:8080
      - 2345:2345
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      ENV: ${ENV}
      SECRET_KEY: ${SECRET_KEY}
      GOOGLE_PLACE_API_KEY: ${GOOGLE_PLACE_API_KEY}
      STAGE: ${STAGE}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./:/app
    networks:
      - wanrun
  minio:
    container_name: minio
    image: quay.io/minio/minio:latest
    command: ['server', '/data', '--console-address', ':9001']
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: adminpass
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./misc/minio/data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - wanrun
  mc:
    image: minio/mc
    container_name: mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: ["/bin/sh", "/scripts/mc-init.sh"]
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: adminpass
    volumes:
      - ./misc/scripts:/scripts
      - ./misc/s3_local_init_data:/s3_local_init_data
    networks:
      - wanrun
networks:
  wanrun:
    driver: bridge
# データの永続化
volumes:
  postgres:
  backend:
